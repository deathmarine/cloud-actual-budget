{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "actual-free-plan",
      "metadata": {
        "description": "Name of the App Service plan."
      }
    },
    "webAppName": {
      "type": "string",
      "defaultValue": "actual-budget-app",
      "metadata": {
        "description": "Name of the Web App."
      }
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "defaultValue": "actualbudgetstorage",
      "metadata": {
        "description": "Prefix for the Storage Account name."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
  "name": "[toLower(substring(concat(parameters('storageAccountNamePrefix'), substring(uniqueString(resourceGroup().id), 0, 4)), 0, 23))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/default/actual-data', toLower(substring(concat(parameters('storageAccountNamePrefix'), substring(uniqueString(resourceGroup().id), 0, 4)), 0, 23)))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', toLower(substring(concat(parameters('storageAccountNamePrefix'), substring(uniqueString(resourceGroup().id), 0, 4)), 0, 23)))]"
      ],
      "properties": {
        "accessTier": "TransactionOptimized"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "Tier": "Free",
        "Name": "F1"
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[parameters('webAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
  "[resourceId('Microsoft.Storage/storageAccounts', toLower(substring(concat(parameters('storageAccountNamePrefix'), substring(uniqueString(resourceGroup().id), 0, 4)), 0, 23)))]",
  "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', toLower(substring(concat(parameters('storageAccountNamePrefix'), substring(uniqueString(resourceGroup().id), 0, 4)), 0, 23)), 'default', 'actual-data')]"
      ],
      "properties": {
        "siteConfig": {
          "appSettings": [
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "true"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "https://index.docker.io"
            },
            {
              "name": "DOCKER_CUSTOM_IMAGE_NAME",
              "value": "docker.io/actualbudget/actual-server:latest"
            },
            {
              "name": "WEBSITES_CONTAINER_START_TIME_LIMIT",
              "value": "1800"
            }
          ],
          "linuxFxVersion": "DOCKER|docker.io/actualbudget/actual-server:latest",
          "azureStorageAccounts": {
            "actualdata": {
              "type": "AzureFiles",
              "accountName": "[toLower(substring(concat(parameters('storageAccountNamePrefix'), substring(uniqueString(resourceGroup().id), 0, 4)), 0, 23))]",
              "shareName": "actual-data",
              "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(substring(concat(parameters('storageAccountNamePrefix'), substring(uniqueString(resourceGroup().id), 0, 4)), 0, 23))), '2022-09-01').keys[0].value]",
              "mountPath": "/data"
            }
          }
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      }
    }
  ],
  "outputs": {
    "webAppUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('webAppName'))).defaultHostName]"
    }
  }
}
